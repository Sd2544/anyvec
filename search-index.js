var searchIndex = {};
searchIndex["anyvec"] = {"doc":"A growable list type with dynamic typing.","items":[[3,"AnyVec","anyvec","A growable list type with dynamic typing.",null,null],[11,"fmt","","",0,{"inputs":[{"name":"anyvec"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Constructs a new, empty `AnyVec`.",0,{"inputs":[],"output":{"name":"self"}}],[11,"with_capacity","","Constructs a new, empty `AnyVec` with specified capacity.",0,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"self"}}],[11,"capacity","","Returns the number of elements the vector can hold without reallocating.",0,{"inputs":[{"name":"anyvec"},{"name":"usize"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements.",0,{"inputs":[{"name":"anyvec"},{"name":"usize"},{"name":"usize"}],"output":null}],[11,"reserve_exact","","Reserves capacity for exactly `additional` more elements.",0,{"inputs":[{"name":"anyvec"},{"name":"usize"},{"name":"usize"}],"output":null}],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible.",0,{"inputs":[{"name":"anyvec"}],"output":null}],[11,"truncate","","Shortens the vector to be `len` elements long.",0,{"inputs":[{"name":"anyvec"},{"name":"usize"}],"output":null}],[11,"insert","","Inserts an element at position `index` in the vector.",0,{"inputs":[{"name":"anyvec"},{"name":"usize"},{"name":"t"}],"output":null}],[11,"remove_and_return","","Removes and returns the element at position `index`.",0,{"inputs":[{"name":"anyvec"},{"name":"usize"}],"output":{"name":"result"}}],[11,"remove","","Removes and returns the element at position `index`.",0,{"inputs":[{"name":"anyvec"},{"name":"usize"}],"output":null}],[11,"is","","Returns if element at position `index` is of type `T`,\nor `None` if the index is out of bounds.",0,{"inputs":[{"name":"anyvec"},{"name":"usize"}],"output":{"name":"option"}}],[11,"get","","Returns element at position `index` or `None` if the index is out of bounds.",0,{"inputs":[{"name":"anyvec"},{"name":"usize"}],"output":{"name":"result"}}],[11,"get_mut","","Returns mutable reference to element at position `index`,\nor `None` if the index is out of bounds.",0,{"inputs":[{"name":"anyvec"},{"name":"usize"}],"output":{"name":"result"}}],[11,"push","","Appends an element to the back of a collection.",0,{"inputs":[{"name":"anyvec"},{"name":"t"}],"output":null}],[11,"pop","","Returns the last element of the vector, or `None` if it is empty.",0,{"inputs":[{"name":"anyvec"}],"output":{"name":"result"}}],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",0,{"inputs":[{"name":"anyvec"},{"name":"anyvec"}],"output":null}],[11,"clear","","Clears the vector.",0,{"inputs":[{"name":"anyvec"}],"output":null}],[11,"len","","Returns the number of elements in the vector.",0,{"inputs":[{"name":"anyvec"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns if the vector is empty.",0,{"inputs":[{"name":"anyvec"}],"output":{"name":"bool"}}],[11,"split_off","","Splits the collection into two at the given index.",0,{"inputs":[{"name":"anyvec"},{"name":"usize"}],"output":{"name":"self"}}]],"paths":[[3,"AnyVec"]]};
initSearch(searchIndex);
